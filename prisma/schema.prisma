// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  publishDate DateTime
  rating      Float
  bestseller  Boolean

  authors BookAuthors[]
  genres  BookGenres[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("books")
}

model Author {
  id               Int    @id @default(autoincrement())
  firstName        String
  lastName         String
  secondName       String
  shortDescription String
  fullDescription  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books BookAuthors[]

  @@map("authors")
}

model Genre {
  id   Int    @id @default(autoincrement())
  name String @unique

  books BookGenres[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("genres")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  firstName  String
  lastName   String?
  secondName String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]

  @@map("users")
}

model Order {
  id BigInt @id @default(autoincrement())

  userId Int
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orders")
}

model BookAuthors {
  bookId Int
  book   Book @relation(fields: [bookId], references: [id])

  authorId Int
  author   Author @relation(fields: [authorId], references: [id])

  @@id([authorId, bookId])
}

model BookGenres {
  bookId Int
  book   Book @relation(fields: [bookId], references: [id])

  genreId Int
  genre   Genre @relation(fields: [genreId], references: [id])

  @@id([bookId, genreId])
}
